composer create-project --prefer-dist laravel/laravel blog "5.8.*"
initially setup the github
1. create repository in github
2. gen key
    ssh-keygen -t rsa -b 4096 -C "yasir.nss@gmail.com"
    name the file then copy .pub then add deploy key
3. git init
4. git add *
5. git remote add origin git@github.com:YaserNSS/vuespa.git
6. git commit -m "prepare github"
7. git push -u origin master

then
git add *
git commit -m "prepare github"
git push -u origin master

in case error
 git pull origin master --rebase


################### Lec 1 ####################
npm install
npm install admin-lte@v3.0.0-alpha.2 --save
connect to DB
in  AppServiceProvider.php
    use Illuminate\Support\Facades\Schema;

    public function boot()
    {
        Schema::defaultStringLength(191);
    }

php artisan migrate
php artisan make:auth

create new file in master in view
work in master file
change home file to layout.master

in bootstrap.js add
    require('admin-lte');
in app.scss
   @import '~admin-lte/dist/css/adminlte.css';
npm run watch

################### Lec 2 ####################
npm install @fortawesome/fontawesome-free
in app.css file add below
//font awsome
$fa-font-path: "../webfonts";
//font awsome
@import '~@fortawesome/fontawesome-free/scss/fontawesome.scss';
@import '~@fortawesome/fontawesome-free/scss/solid.scss';
@import '~@fortawesome/fontawesome-free/scss/brands.scss';

then work in master fontaswome icons

################### Lec 5 ####################
npm install vue-router
in master view
            <router-view></router-view>
in app.js
//importing vue route
import VueRouter from 'vue-router';
Vue.use(VueRouter);

let routes = [
    {path:'/dashboard', component: require('./components/Dashboard.vue').default},
    {path:'/profile', component: require('./components/Profile.vue').default}

]

const router = new VueRouter({
    mode: 'history',
    routes
});

const app = new Vue({
    el: '#app',
    router
});

in master add links as
            <router-link to="/profile" class="nav-link">
                <i class="nav-icon fas fa-user text-warning"></i>
                <p>
                    Profile
                </p>
            </router-link>


################### Lec 6 ####################
add     mode: 'history',
add
Route::get('{path}','HomeController@index')->where( 'path', '([A-z\d-/_.]+)?' );
add color for active link
.navbar-laravel {
    background-color: #fff;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.04);
  }

.router-link-exact-active {
    background-color:#3f51b5;
    color: #fff !important;
}
################### Lec 9 ####################
create users component
register route
    {path:'/users', component: require('./components/Users.vue').default},
add link in master
                <router-link to="/users" class="nav-link active">
                  <i class="fas fa-users nav-icon"></i>
                  <p>Users</p>
                </router-link>

################### Lec 10 ####################
work only in  users component as table check github
################### Lec 11 ####################
npm i axios vform
in app.js
import { Form, HasError, AlertError } from 'vform';
window.Form = Form;
Vue.component(HasError.name, HasError)
Vue.component(AlertError.name, AlertError)
in user component
        data() {
            return {
                form: new Form({
                    id:'',
                    name : '',
                    email: '',
                    password: '',
                    type: '',
                    bio: '',
                    photo: ''
                })
            }
        },

################### Lec 12 ####################
add form
then create user function
        createUser(){
            this.form.post('api/user')
       }

create user api controller
php artisan make:controller API/UserController --api
then add route in api.php
Route::apiResources(['user' => 'API\UserController']);

################### Lec 13 ####################
in User Controller
    public function store(Request $request)
    {
        $this->validate($request,[
            'name' => 'required|string|max:191',
            'email' => 'required|string|email|max:191|unique:users',
            'password' => 'required|string|min:6'
        ]);

        return User::create([
            'name' => $request['name'],
            'email' => $request['email'],
            'type' => $request['type'],
            'bio' => $request['bio'],
            'photo' => $request['photo'],
            'password' => Hash::make($request['password']),
        ]);
    }
in user model
    protected $fillable = [
        'name', 'email', 'password', 'bio', 'photo', 'type'
    ];

 ################### Lec 14 ####################
        $this->validate($request,[
            'name' => 'required|string|max:191',
            'email' => 'required|string|email|max:191|unique:users',
            'password' => 'required|string|min:6'
        ]);
################### Lec 15 ####################
in user controller
return User::latest()->paginate(2);
in user vue
       methods:{
            loadUsers(){
                axios.get("api/user").then(({ data }) => (this.users = data));
            },
         created() {
            this.loadUsers();
        }
in table

                    <tr v-for="user in users.data" :key="user.id">

                        <td>{{user.id}}</td>
                        <td>{{user.name}}</td>
                        <td>{{user.email}}</td>
                        <td>{{user.type | upText}}</td>
                        <td>{{user.created_at | myDate}}</td>

                        <td>
                            <a href="#" @click="editModal(user)">
                                <i class="fa fa-edit blue"></i>
                            </a>
                            /
                            <a href="#" @click="deleteUser(user.id)">
                                <i class="fa fa-trash red"></i>
                            </a>

                        </td>
                    </tr>
################### Lec 16 ####################




